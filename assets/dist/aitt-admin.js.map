{"version":3,"sources":["aitt-admin.js"],"names":["document","getElementById","action","aitt_js_data","nonce","headers","Headers","credentials","method","newTitleEl","privateTitleEl","submitTitleEl","errorMessageEl","successMessageEl","titlesContainerEl","titlesListEl","updateDOM","message","titles","textContent","innerHTML","style","display","addEventListener","el","titleVal","value","privateVal","checked","ajaxBody","wpnonce","type","title","private","timestamp","Date","now","bodyString","Object","keys","map","key","join","fetch","ajaxurl","body","then","response","json","data","JSON","parse","target","matches","actionType","parentEl","parentNode","titleEl","querySelectorAll","privateAttr","getAttribute","window","location","redirect_url","replace"],"mappings":"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","file":"aitt-admin.js","sourceRoot":"../src","sourcesContent":["// Hello? What's all this jQuery? We'll have no libraries here!\n// Are you vanilla? This is a vanilla file, for vanilla people! There's nothing for jQuery folk here!\n(function() {\n  \"use strict\";\n\n  // Abort if we're not on the dashboard.\n  if (!document.getElementById(\"aitt\")) {\n    return;\n  }\n\n  const action = aitt_js_data.action;\n  const nonce = aitt_js_data.nonce;\n  const headers = new Headers({\n    \"Content-Type\": \"application/x-www-form-urlencoded\"\n  });\n  const credentials = \"same-origin\";\n  const method = \"POST\";\n\n  const newTitleEl = document.getElementById(\"js-aitt-add-titles--text-field\");\n  const privateTitleEl = document.getElementById(\n    \"js-aitt-add-titles--checkbox-field\"\n  );\n  const submitTitleEl = document.getElementById(\"js-aitt-add-titles--submit\");\n  const errorMessageEl = document.getElementById(\n    \"js-aitt-add-titles--msg-error\"\n  );\n  const successMessageEl = document.getElementById(\n    \"js-aitt-add-titles--msg-success\"\n  );\n  const titlesContainerEl = document.getElementById(\"js-aitt-list-titles\");\n  const titlesListEl = document.getElementById(\"js-aitt-list-titles--list\");\n\n  /**\n   * Update the messages and title list in the DOM.\n   *\n   * @param  {string} message Success message text.\n   * @param  {string} titles  HTML string.\n   *\n   * @return {void}\n   */\n  function updateDOM(message, titles) {\n    // Add the success message and make it visible.\n    successMessageEl.textContent = message;\n\n    // Replace the container with the latest titles.\n    titlesListEl.innerHTML = titles;\n\n    // Toggle titles container visibility.\n    titlesContainerEl.style.display = titles ? \"block\" : \"none\";\n  }\n\n  /**\n   * Listen for add title requests.\n   */\n  submitTitleEl.addEventListener(\"click\", el => {\n    // Get our form values.\n    const titleVal = newTitleEl.value;\n    const privateVal = privateTitleEl.checked;\n\n    // Proceed if we have a title, otherwise,\n    // show an error message.\n    if (titleVal) {\n      // Hide any messages.\n      errorMessageEl.style.display = \"none\";\n      successMessageEl.style.display = \"none\";\n\n      // Build AJAX body.\n      const ajaxBody = {\n        action: action,\n        wpnonce: nonce,\n        type: \"add\",\n        title: titleVal,\n        private: privateVal,\n        timestamp: Date.now()\n      };\n\n      // Build a proper query string based on the body parameters.\n      const bodyString = Object.keys(ajaxBody)\n        .map(key => key + \"=\" + ajaxBody[key])\n        .join(\"&\");\n\n      // AJAX request.\n      fetch(ajaxurl, {\n        headers: headers,\n        credentials: credentials,\n        method: method,\n        body: bodyString\n      })\n        .then(response => response.json())\n        .then(response => {\n          // Reset form fields.\n          newTitleEl.value = \"\";\n          privateTitleEl.checked = false;\n\n          // Update the DOM.\n          updateDOM(response.data.message, JSON.parse(response.data.titles));\n        });\n    } else {\n      // Hide any messages.\n      successMessageEl.style.display = \"none\";\n      errorMessageEl.style.display = \"none\";\n\n      // Update and display the error message.\n      errorMessageEl.textContent = \"Please enter a valid post title!\";\n      errorMessageEl.style.display = \"block\";\n    }\n  });\n\n  /**\n   * Listen for remove title or create post requests.\n   */\n  titlesListEl.addEventListener(\"click\", el => {\n    // Proceed if the click was on a create or delete button.\n    if (\n      el.target.matches(\".aitt-list-titles--create-post\") ||\n      el.target.matches(\".aitt-list-titles--delete-title\")\n    ) {\n      const actionType = el.target.matches(\".aitt-list-titles--create-post\")\n        ? \"create\"\n        : \"remove\";\n      const parentEl = el.target.parentNode;\n      const titleEl = parentEl.querySelectorAll(\".title\");\n      const privateAttr = parentEl.getAttribute(\"data-private\") || false;\n\n      // Build AJAX body.\n      const ajaxBody = {\n        action: action,\n        wpnonce: nonce,\n        type: actionType,\n        title: titleEl[0].textContent,\n        private: privateAttr\n      };\n\n      // Build a proper query string based on the body parameters.\n      const bodyString = Object.keys(ajaxBody)\n        .map(key => key + \"=\" + ajaxBody[key])\n        .join(\"&\");\n\n      // AJAX request.\n      fetch(ajaxurl, {\n        headers: headers,\n        credentials: credentials,\n        method: method,\n        body: bodyString\n      })\n        .then(response => response.json())\n        .then(response => {\n          // Update the DOM.\n          updateDOM(response.data.message, JSON.parse(response.data.titles));\n\n          // Redirect to the edit post screen if we have created a post.\n          if (\"create\" === actionType) {\n            window.location = response.data.redirect_url.replace(\"#038;\", \"&\");\n          }\n        });\n    }\n  });\n})();\n"]}